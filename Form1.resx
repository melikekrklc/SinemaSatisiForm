<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAN0AAADkCAMAAAArb9FNAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAGJUExURebm5v///wAAAOjo6Ozs7P4AAPQAAOgAAOQAAeXn5tYAAOfl5t4AAPAAAfgAAKenp8cA
        AMEAAPDw8LMAALgAANEAAM7OztQAAB8fH8oAAJYAAAAAA7y8vLW1tfX19RkZGZAAACYmJo+Pj8XFxdfX
        1zAwMAsLC4SEhKGhoUhISMvLy97e3peXl3R0dK6urikpKe6trfjU1Obl66AAAGdnZ0FBQVZWVtGOjmxs
        bHl5eePo7fXj4A4AABwAALENDejw7Ou4u11dXb4rKaiwqdq6uvXa1eXo3lwAAOwyL+tYVuqIh04HBvCf
        muJgWXELB+UxOepua/C2rNFvcCYBA+p8e4sFDT8FB+dDSKQlIn0LDvrr9Pbo18pNUd4fH+7Z3+gZGbia
        lFIICPjYzC0AAOiUkkgbF+bEtj47QMk6Q8whIdNdW8t2dt/OzMAiJY0WHa8cHLaDg6gcIaRWVXIlKFkc
        HxwlGy0gILEhL7taWkojJzMWFXsmJpkcGXhHRs5qZ+CtrsJ/dMFrZdqhlmNcyAcAABgLSURBVHhe7ZyN
        X9pYusfzViEEhISIhlcFBASkEq0vpCW2I7jbdpyZztqdOtLeaV2v2LVOd+/edvfe2+7MX35/z0l8m9EK
        1lEzH35icvLK+fI85znPSQIcL3K/Yw3ovKsBnXc1oPOuBnTe1YDOuxrQeVcDOu9qQOddDei8qwGddzWg
        864GdN7VgM67GtB5VwM672pA510N6LyrAZ13NaDzrgZ03tWAzrsa0HlXAzrv6ibSyTKnsInCXpzsru9f
        N9R2cltR5LYsmw25YZruyv51A+nIaGADlcI1ZEhxN/Svm0SHqoicKIqKItoycXGmgmnjd2E7kEmSWIkl
        a7UvUit1qGVJsKDcdnfoXzeBzokaQMtV798WhLurcd0I+H0+34s//PHhsiUjtFxQ10+nNAhPU1KLArQa
        Hx26dUzDoc5WS1JMBBh3/3507XQUHUUttkRoj+KBYZfqUMO3hv2PJRl87gH96NrpTFOyk1PMbJEQ0fyS
        b3joVujLOoKMe0A/unY6JZ28Q2xrxq/MxgRa/H1lNS7S+K6ZTtTKYEswtmECockpGvrKukhFr5dOqqC9
        JYRHzRAxOVwn6QA8xKz3tYT9+/XO66NDoNdSGXLK9RDzP2a1EFgcMZe8RWisEPpGRs/XcA/uUddHJ0oy
        9QGJR4bDRf/G2tNHTcYGMWCsxYSQv7JMSqr70rXRiVoOhksI6z5mIIIJPSkA9+4LB26IjAYNw2vpLzSD
        jFPpzzevi06USuSU3zbJ7xjFraE/WbeFRELQ2RKt68TXm+jbUaTXHzFm8AadKE2TVz4NOCZiLvjntpkA
        XUJ16IaHviPWWYceL38LbdU9vkddCx2aD+vjVv0OF7Hc8i+bSSJ2PXPY95hZ92noYIfQjILA4p6iN10D
        HcYClQmq+DMfCxiObv3RsufR6oRVyjOH4adaFc0SdAyW9JCGfe5JetN12E7KH8SToSGXDr3aw40UId81
        yJ63bv3he20Oi4k1uK5L96XFecB2eaJALzdMcAe2G35Mq912htRyxq5gMZFA2HG6wOFbf7D6HShcPZ0E
        CkSL8SFSaAj2g0C3WSBHnEURzLd89TTFHeERea+rIas/y10DnVhx8xOQMcsxOhT8a/e+XY2AluiGO1aN
        drunsrjjyPecrkb0o6umk7lJ8r9nPsCFyDMxcUGHAn62zOhe/AfB3W2iSC8v0NGVkynEfGHVByYyGwES
        H7PgoR2h4XV8Bj9QknakUOuG9+baNDWuRy+GQqHhkE9fvfc0SpgO3QmF1KZBtiS5dLDdjaZD+gW4e2oI
        Ggo+oejybQCgjOGkyKpkVibaAf39zaaTYtTmhCbQQkO+x8+paQn6MNrgAcZxheC+xzX84nl/bFdLJ3JO
        ikIsodCf3K5BHfaxAHOowzKFl+PqbvR7Xfrq6GRFw3gukXgU9Plgrc5LE26aEF4FyUvJVZ25W2TmJOqD
        NonplxtIUd2z9aYrtJ2TJCd0nw81932tNSaJDpY8VUMUVsE42lQJkSg/9H076ArpZDe7RNV9oeDjdJZg
        XyGonCGyYmANh6whvpIZt0S53V8qdmV0ikYXiBJPR0N+n98fCs4gZ04k7iLCnCFElVB3mXYSDCxhcUZs
        3FQ68TBekul8/k0sJe6dDReCAwfrHIUhQafoGQrU4Zc3lE7D4C2B8aqPbn/AOwOr975dM6h8JJfrQP4t
        Gx8JBNshrnYtWW7fzP5OZCFFUH0OHXzTN/ICNnTF7OnKKWDa+V4rkmO+8jNLfi1h8Hoj6UTNueTM0E6T
        n3iHMCEQEuYPTQzxoLhjyce2otzM8R2ZDjEEvcGZ8qtNHXD+ww/AP7MBb6arL4Q6FKzbdMnPPWFvuiI6
        DA1At0YmOpJLweSPrMK262iWrvH8vuBjdjX3aYd5bejPEt1mvomeKebICGh1QReMiVFAFGn+vEL490bQ
        X7grQ6EohdW1INaALrhlkt1uIh1dAEokfgi4WL8Q4LqtMtnprgHrHuD5g81n6000RxL6g0a77+cDroSO
        XSdKJGZhuSD9MyCaOWxBX3BZqZGh7gUYyqHcCEPm3WTx8iZerZWq5JevDELz+wJBfzAAIgcOCvq/lNLz
        oGPd4Ynm6Ar7zFykoldBJ2q3ie4ZsxygAhRcgkGaEhpQZ2ynYTYJxJHL5Qiu2/f1MNKV0DkZR5OQwBeI
        r/7Q9AdczyTgQN3EeEEQEEFOlw9pS59OyXQVdBKNBoSnI8AATPcvtBR1UEl+/+i281gAs+ypMlp2vxGF
        dBV02iTV/Rk80B8I7liMhLmpA4f/ccQc4VmALbk8x+ULPERn556tH10BHSIm3blqMhbjpf2fLh3BuIKz
        rjcZJ7VDViCbUtGHobxfrV/sUbjfnE7kpDAL9gbRBLbaDbBR73BSgQA4HPnIyLTEOBnpQ+liT/pdge3o
        cgoaVSAAPMOi3iGR+HaElo6L+olD+YIqug8Kq4yx+9zmbuqTVCJrduugCQS+1CqIjYnEeAA4x3QUY4gz
        EH10Fx8HC0KE97gBy91MOveGVhPGCgQ+aE50HKUlxuKKWdaRf/RPNFxKzDJXBeADSzaVG+qZbNwqCHqQ
        nHGTjWl+iAT8o0dwBOa8mEafpO9jp8QzWoD5Rr4x2xv9jg4cfRadKJ5zNDaLLA1LPDVgnUDAeISMbN0g
        UzkiKGY2KgdGab5j2eTLiXUG/OLFQ7vv/PJAn0NXKZcrbvEXEivstCKH7Rp7uuEH+CIp0pxVMRuFnBUg
        7nRgSBQc0pFlJ+lGbkPG67ypVS7I9ll0Yj5cyp9+eK5E68VYOCZyTktbo+o7BER2iDYa6HRnu3BaElkO
        AdL5PJ6ynYL6j184H9VF9Hl04VPpxFw4TOvzJUbHUshnQQfpGJij0W483mWmI1TMd9NJhBSYjtEar2tX
        Tee0N4fulONdOrESJjopQ3TrIxDQRhgipqO0jPIIowMYlbE6sEs3T1gPEgiOBHf+Gg4THd7yvEZ+ii5A
        x96IRHQSFZyVh9skooOITpKkgiAUMm86HQM4+It0ux1C7UA068Znu53OC2KmlcE99rAY9u+8GAl26zHQ
        ydSCKxcwYV90Tt25XKpWS+Yq6UotlUyiCESpnErRDlgVk1K1cDhFCodrqVSsIEyMFdZm4100rxGjuz8b
        n+3ob988w3y/29mLx2dn9/e7o9jSbO7vjQbGHz1dfbA/i7XdyLJFdHjXGrXxvvH6oRPzuVS4mp2fujM5
        kSmMZW4XCpmJyTtT88VULhmuSfQQUThc1kph4B0ql6G7dqvxeBwI5Iez4/E3f0HDWp2djTc7gB2nArW/
        +Gx8fyQYGBnpgnx2fHb8R0t26PBBwcn7Vj90EgU/pkKhIIyxwtjE5FhGIGeazCY5jTljEnVJkmDCZDI/
        Qa75hirfjRBcs7lAT2tk/rnXpDVNIL19+7YLmv3m7J6BttnZH59tYsPfwmWb6CScqSxR79mn+qBzUipU
        dTKbLQGumK9lx4Qqj+46IxSzd7BlLlkLl1m7k+CtTruj0V0hsx4A2D4aGazzgZ6ZymReRajlEfCbvxQK
        f4/Hm2h/HXQOIx0yqmF8gNOjVwnLOF+OHhzuW/3QpYRwrFIEHc/z4Mymc6WCkOV5oI7FcmU2Ar+dRfNw
        YyaiTkwU6fbImLCGZjUeJ7q9Jt0egNX/CwAIJN31H/+BIDnxLN41EDmxxqC9RoxNy7Q5BXSwXPJCcP3Q
        SVkhxvNhVAweNzEmTBWn7owJY5OT8NLMYpUevC+BJKud6BFECSiZsb/v7Y3H4x1M9C1bgTOjKe7vdSLG
        aPfHFCVe/1iFmyKkdhBSQdeN7FgNU1Hk2Bdou7Xea3lCPdOhW74vFMPZeVYzIE6Qk1LAyIAO7TAzBjtq
        d4TCkgY6OoLRcSJ7JOrV+Hh8PK6SZ9a1LD6OxL31eHy8axjvazU648Qa2pxrN/w3d1ryhqwo5JnQb247
        UWLjNNBMjLFAAZwjOlRwQphKw7QZYR6t78h2Wo4O+e+3e/v7D3TY7p1Fl50zY28QLWEjfbuWxdkS/3qL
        btAA3fgs0b1v2aZJX6IBXQ2uGfuN253o3G5ylAHN2K/ohEK5ICyh/S2WRHTzRKfF6EEH7LKu6hEDIWT2
        3Qo7w7pqdNHXdTe52iQOTqxGyHKu7cb/FhM3TFnGSVjMRA9zRkb7afXume6djgK6OvRzIDtBR8tkUGGS
        48NYuJ+K5fPV4hxS6LFCojBWWO02u6raHR/fW8Mx/3yjGizONB82pumc95ojhtFBk9uDu+p/q6Uk0a6E
        U3mJ6OhzqqEGblV6V++2k9hjyuApZDLU9k56JhXGxiawPsXzU0IRIQZNcfLOncJtsmsh86/18XH0bpio
        8Wfv1sf3m/v71BIf0p09IfOdYRgRylvQPptb1FPm4N9fxBw6Cr+pCxivdzrn4g8ZiQk8x+kO1yNwLgpz
        uVwK27LlHHWM1EoRIsf3u8YebKdG1H0EFIhC4wPhH0gr1/YiIyMqhdXx+HfL1FO6wYR5Jj5aBKoLRJY+
        6FhQKUyMOZ5JaJkM3SCAJW8XDjwWIQer5nL5MOiKWjksYJcxOuZfD7poasgoVTS/PfDFqRyJrD/6+//8
        bxO9gaHu7b/dn33/HLHEyWXzyE8q+Ty9u5jPx1g1+lLv7c55uAICQgb2YoVjs6P1pNt30EkAF8ISbSo8
        U6FuF8GFzdGvqWoEDqnqtCESQRlm3Xpu0pfNWcLO6oY+hc3cxb7UOx3F8c9R4t6sAQRAsJdTICG+IFbS
        NKI+WLFtGXAXuUR0inqmk1in/Fl6dWAkVwcLoFLhrhE1umWx7/pcFlwfdEioTug2XS+pFecPfPFcJRKP
        moR3QgADFtlP1T+0JBleyZ5ruBy+numciz+OEASnJJZJI59G7KevRZwvDOl+aBKLS8WKrn8aanRzW6Lf
        dACacvGvYP9CvdKJmltHQchJ6NDGwDUhTOY4MN7m+SR1DecpAeeM6xGKIgBikBC5qx79sC1dmj8eqWc6
        Gtwt5jT0vRzPw0upv3a1mObTbvHTgvVgPp3IiNAxHtA2F1qSSFfT3Te7NPVIh7E/aoexHPqFpWmMeU5q
        Cbjz7CvjZwtkwl1M7q6uN3UWXzDRo0DbtsRGgx6+vSyHPFSvtmN3h6dSS27rm1oqpZI5ZCSladcnMaRl
        w9czlbjrzIjy/xY+bO7sbO6+/rjyXLFthWvLlxgpj9QrHftCFVNhDpm/xq70kbR0jEYwAo1sj5z1dBEY
        qWSLkiThJAr7iQMMUh2573V56tUz3cFdZilHYxtaw17ONpH1FslP206oskQVzbQiUTbCfvuGIr9NdlMa
        zq8BHFoQBSZ2h4SmJ9nZlnPVKx0b3M2nOO20fEjUyiyJnq+wB1NO1bTGi5gVsjFJZBV2qkc/8kMdwRnd
        AKNznjI6sdn5aM5Vr3QY3BVj5I/uihOCgzIuxM5jveJJzdPVJaHI/fIUqKWDhj9KVA5qTaUTBMfLbEey
        6DnqkU4qUb3chV+LMl00vqk0z7409wtNFmNYDe+9n9fYOTBBi6NrQgxOtln2hcqSJV2Xc6t+xnvS/ifY
        T1evUYU7b3DFhu53gJD9VWxJ8jzbmHTYINOU2aOk+EdHgDKDofoSpbMXlWgzJx7DdU+AIxFlL5Hu3P3o
        IiWUPeGdY8VcTlhKp+aETO2YT8qyZFkWenBUWbGQOtNMcXAtCawUUx3RiIFmtA8tO8eLOPzAvJ9Qr+3u
        fDyRYyEF3knRg+l+5j4SNgo4mRKzm0gApmlK33x419zbnZFM025tvq2btrW7P4McWrHrb98rDXP7w+7u
        e/ztfqib4sLu7hNLaSvW693dBYtrKEqjtdt83UaUJdM7b3+qerbd+aJvLUG3EWAqsdSkkKRWWEkihZkM
        u585azCmLC7oahR/6qZlyx91dcG0P6qGXhdhp4+q3rI3NlUMcSPISdV/S/WmYUQ/irI9o6uRaB3HK9Lr
        iKF/pNTt089CXB6dyEnOVTPnUvykUGYXrhEtk8d8ErUx7Xo0srlcX96M6AtmY0aPLEjiY8BsWorSXlD1
        uq3tYZC+tUBqNepRDCOe2Kb9xMBYot42bbMVRRq+KSEV+HTbu0TbkfWciJJZKiULwv2lDBpe1o2Th0IQ
        IQK5bbf0yE+WNKMSHexi6AuSaS+Qeey9iG7J6OBNWwYdsu09q2HtAwkHmg3zZzW6i/1sZj33vKfpUukQ
        WmrHI+ZUlrpId5MjalryAoAskHzc3LYbRCdiCsPoL9HIQC6S7do2gg5yGPtlVP0yGq2DUt9Vga6Y0o6x
        U4+qr21K5K6ODt4p5cPFufn5uWIph4Vfn51+q4Ec693rmbqGOMLoYDs1sqXD2cSfya7ag4gK14VaigmO
        rT11Qfs5srcFg8GcdTRVbdPYs9qsTzlbl2w7SBSRH2uI3afmNabJKW1xJmqMRHR9dwXu57S7GVXdfq2q
        M/YBXUSPYnik739PdAu7kfcbHyKbM6BryNJrRJ7GY12fUdqNTw4KL5/u00L3BX9S6ls7UYRF1A+REJ6J
        dhdZsR7A8VibJLqmHm1i9GdRu1vYUvdbsB+js1vNkV2tgVa7KZ3z6N9vR3fWiZGC2c/RwdU/7kaMZp3Z
        TpThmcv2N7qxe+iZdXTYkAzbRRa2dR22WpkxonXFRAT6MDPzzQ72bHz6dy2u2nb4qJ+3f44uoMU0NnZV
        fcWxHejU5Yb9RFV3VJXoDN1SaExkc8wzLV1FoHnOAurGJmIodZhGBHHlRnlmA8O5Njq6lixb9sOI6tKx
        dqfIz/cMY+SADh2CrYgsqiCGRIzI5gbR2S91o4uB/eaOjrhCiejZumo6tDwTkSPywdLay1Gj2TqiW2lw
        4rI+chgzV5aXV1YQd4gO3aBqLGgLhr7ceB3RP2paW0ujMIPczj3vabp6OvQJFhKt5s4DHdmUbaKnW8A0
        om5jkC79hFjzV1l7h6yELiqp+nuJ0S3rEYD9bESXtabRRN6N8IR1762bRgfzWa+jOlrOu2VTabeaSCLN
        FfTXJgLOywcR1F1ciLrSf2pbs9GPDes7dd8St6PN59pbfcvJWtub+k8bNHY4U9dCp5jt1srH5ZeWYmIw
        83IbXbKyjWlbNtvfr7QaqDj99Cn9+mnL4pTWisK1Wx9btmmttNo4FK2NJLe2MQy6cXTIx5AsNmA4DIdk
        cYN+nlZECTljA50hBgEY2zpqYC125TAqMs0G9pI5zJyzKA1RwXDIWThV10SHFwQozAmJo1/h5RoNcLPs
        ktUZeynIbDBwwIo2TfAyEXTd31im64X4HFj5dF0PHdVTpusqVGOMu2FAUVQwIm9Tmo0S1iGRE2WTxrsY
        6WCbwi6fyjb90LLrmW2kdTcvqhxJFCvVbL5crdZyMVFKFkuiVCuGRa2al1IxKZyrlqqKWJIqtXySdsJ/
        rp8KXzMdJxWna7VsMZlfqknJqUp1ulrksrHknbn0/BiX4VKTeU4UYqmpVLFIO2VzgpfoxGRtabo6HY4V
        a+nwUjo/tZjMLdbuZIX8fGpqQotNpUFXKs4ni1naaXGy1M+TD9dOV5ufK5Wm5rKlqfu1xftT5fz89Fxp
        sZJaWswnC1rsvsaJtzFLYoe5bDbFTZ46sDpD104n0liQBoRpNuewjAIGifinJexDM4wX2QZacI7sRddN
        dyhWD7qmfVSh4+Uj9VPhG0P3m2hA510N6LyrAZ13NaDzrgZ03tWAzrsa0HlXAzrvakDnXQ3ovKsBnXc1
        oPOuBnTe1YDOuxrQeVcDOu9qQOddDei8qwGddzWg864GdN7VgM67GtB5VwM672pA510N6LyrAZ13NaDz
        rgZ03hVP3x/6vYrjf88a0HlXvwldzJmlndlBIc+mx5Tk8yl6xVJ8OclzeT6Z45NYyfFJ9wyfq8uhE7V8
        GvWrVMR0hS9z1aQmcdXUUoyLpXNcLr+UTmlcLqxxfL6sJdO5fI4OShb5WK5cypdjyXwsxVVrfL6khXm+
        WJbEIjvtZ+ty6NKluVopmQ2Hq6kaX5SqlWq5VtNK6aVsKlZLSslwuljiS0Xsx2fFaiqby/PAqPJ8qZJc
        1HiwZHkthWk6l+UrZZ7D1svQJXnmXH6Rn0ulcrVpDuYIi6VSNlUuATJX4bKVajJXreZLpUoO02Q4V4qR
        l2rT6VIqz9X46XJ6sczHqlqpJMWqfDIs3a84p/1cXRJdmv2xgiZSWdJ4idfSIhVR4jDDpjQWsDnNdtU4
        WkRR5NIisgqR1zSeS6NAi5eiSzrNjRTP/z/+rW2bfJoRbgAAAABJRU5ErkJggg==
</value>
  </data>
</root>